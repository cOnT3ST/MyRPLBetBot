from datetime import datetime

import telebot
import utils
import config

TELEGRAM_TOKEN: str = utils.load_confidentials_from_env("TELEGRAM_TOKEN")
ADMIN_ID: str = utils.load_confidentials_from_env("ADMIN_ID")


class BetBot(telebot.TeleBot):

    def __init__(self):
        super().__init__(token=TELEGRAM_TOKEN, parse_mode=None)
        self.register_message_handler(callback=self.handle_message, func=self.filter_users)

    def start(self) -> None:
        self.notify_admin("<b>–ë–û–¢ –ó–ê–ü–£–©–ï–ù</b>")
        try:
            self.polling(none_stop=True)
        except Exception as e:
            self.notify_admin(f"<b>–ë–û–¢ –û–°–¢–ê–ù–û–í–õ–ï–ù</b>\n\n–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        else:
            self.notify_admin("<b>–ë–û–¢ –û–°–¢–ê–ù–û–í–õ–ï–ù</b>\n\n–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–∑ IDE.")

    def notify_admin(self, text: str) -> None:
        prefix = datetime.now().strftime(config.PREFERRED_DATETIME_FORMAT) + "\n"
        self.send_message(chat_id=ADMIN_ID, text=prefix + text, parse_mode='HTML')

    def handle_message(self, message: telebot.types.Message) -> None:
        text = f"A message has been received\n" \
                 f"Sender: {message.from_user.first_name} {message.from_user.last_name}\n" \
                 f"Text: {message.text}"
        self.notify_admin(text=text)

    def filter_users(self, message: telebot.types.Message) -> bool:
        """
        Checks if the user is authorized and sends a denial message if not. Used as a filter for message handling.

        :param message: The incoming message object from a user.
        :return: True if user is authorized, False otherwise.
        """
        user_authorized = message.from_user.id == int(ADMIN_ID)
        if not user_authorized:
            user_id = message.from_user.id
            self.send_message(chat_id=user_id,
                              parse_mode='HTML',
                              text='<b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!</b>\n\n'
                                   '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –∑–∞–∫—Ä—ã—Ç–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ, –∏ –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º. üò¢')
        return user_authorized


if __name__ == "__main__":
    bot = BetBot()
    bot.start()
